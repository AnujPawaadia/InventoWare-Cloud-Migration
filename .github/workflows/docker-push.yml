name: 🚀 Start Jenkins & Trigger CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  trigger-jenkins:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: ☁️ Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: 🚀 Start Jenkins EC2 Instance
        run: |
          echo "Starting Jenkins EC2 instance..."
          aws ec2 start-instances --instance-ids ${{ secrets.JENKINS_INSTANCE_ID }}
          aws ec2 wait instance-running --instance-ids ${{ secrets.JENKINS_INSTANCE_ID }}

      - name: 🕒 Wait for Jenkins to boot
        run: |
          echo "Waiting for Jenkins to become available..."
          sleep 120

      - name: 🧩 Trigger Jenkins Job
        run: |
          echo "Triggering Jenkins job..."
          curl -X POST "${{ secrets.JENKINS_URL }}/job/${{ secrets.JENKINS_JOB_NAME }}/build" \
            --user "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}"

      - name: 🛰️ Poll Jenkins Job Status
        id: poll
        run: |
          echo "Polling Jenkins for job status..."
          for i in {1..20}; do
            STATUS=$(curl -s -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" \
              "${{ secrets.JENKINS_URL }}/job/${{ secrets.JENKINS_JOB_NAME }}/lastBuild/api/json" | jq -r .result)
            echo "Current status: $STATUS"

            if [[ "$STATUS" != "null" ]]; then
              echo "result=$STATUS" >> $GITHUB_OUTPUT
              exit 0
            fi

            sleep 15
          done

          echo "Jenkins job timed out or never finished."
          echo "result=TIMEOUT" >> $GITHUB_OUTPUT
          exit 1

      - name: 📧 Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: ${{ steps.poll.outputs.result == 'SUCCESS' && '✅ Jenkins Job Succeeded' || '🚨 Jenkins Job Failed or Timed Out' }}
          to: anujrtk.aj@gmail.com
          from: GitHub Actions <${{ secrets.EMAIL_USERNAME }}>
          body: |
            ${{ steps.poll.outputs.result == 'SUCCESS' && '🎉 The Jenkins job completed successfully.' || '❌ The Jenkins job failed or timed out.' }}

            ➤ Job: ${{ secrets.JENKINS_JOB_NAME }}
            ➤ Status: ${{ steps.poll.outputs.result }}
            ➤ Jenkins URL: ${{ secrets.JENKINS_URL }}/job/${{ secrets.JENKINS_JOB_NAME }}

      - name: 🛑 Stop EC2 after Jenkins success
        if: steps.poll.outputs.result == 'SUCCESS'
        run: |
          echo "✅ Jenkins succeeded. Stopping EC2 instance..."
          aws ec2 stop-instances --instance-ids ${{ secrets.JENKINS_INSTANCE_ID }}
